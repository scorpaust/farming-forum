{"remainingRequest":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\dev\\farming-forum\\src\\store\\modules\\threads.js","dependencies":[{"path":"C:\\dev\\farming-forum\\src\\store\\modules\\threads.js","mtime":1639942079112},{"path":"C:\\dev\\farming-forum\\babel.config.js","mtime":1638558199793},{"path":"C:\\dev\\farming-forum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/dev/farming-forum/src/store/modules/threads.js"],"names":["arrayUnion","collection","doc","getDoc","serverTimestamp","writeBatch","docToResource","findById","makeAppendChildToParentMutation","db","namespaced","state","items","getters","thread","rootState","id","author","users","userId","repliesCount","posts","length","contributorsCount","contributors","actions","createThread","commit","dispatch","text","title","forumId","auth","authId","publishedAt","batch","threadRef","userRef","forumRef","set","update","threads","newThread","resource","item","data","root","parentId","childId","threadId","updateThread","post","newPost","postRef","fetchThread","emoji","fetchThreads","ids","mutations","appendPostToThread","parent","child","appendContributorToThread"],"mappings":";;;AAAA,SAAQA,UAAR,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,MAArC,EAA6CC,eAA7C,EAA8DC,UAA9D,QAA+E,oBAA/E;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,+BAAlC,QAAyE,WAAzE;AAEA,SAASC,EAAT,QAAmB,YAAnB;AAEA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GAFM;AAKbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,gBAACH,KAAD,EAAQE,OAAR,EAAiBE,SAAjB,EAA+B;AAErC,aAAO,UAACC,EAAD,EAAQ;AAEb,YAAMF,MAAM,GAAGP,QAAQ,CAACI,KAAK,CAACC,KAAP,EAAcI,EAAd,CAAvB;AACA,YAAI,CAACF,MAAL,EAAa,OAAO,EAAP;AACb,+CACKA,MADL;AAEE,cAAIG,MAAJ,GAAc;AACZ,mBAAOV,QAAQ,CAACQ,SAAS,CAACG,KAAV,CAAgBN,KAAjB,EAAwBE,MAAM,CAACK,MAA/B,CAAf;AACD,WAJH;;AAKE,cAAIC,YAAJ,GAAoB;AAClB,mBAAON,MAAM,CAACO,KAAP,CAAaC,MAAb,GAAsB,CAA7B;AACD,WAPH;;AAQE,cAAIC,iBAAJ,GAAyB;AACvB,mBAAOT,MAAM,CAACU,YAAP,CAAoBF,MAA3B;AACD;;AAVH;AAYD,OAhBD;AAiBD;AApBM,GALI;AA2BbG,EAAAA,OAAO,EAAE;AACDC,IAAAA,YADC,qCAC0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7DC,gBAAAA,MAA6D,QAA7DA,MAA6D,EAArDhB,KAAqD,QAArDA,KAAqD,EAA9CiB,QAA8C,QAA9CA,QAA8C,EAApCb,SAAoC,QAApCA,SAAoC;AAAvBc,gBAAAA,IAAuB,SAAvBA,IAAuB,EAAjBC,KAAiB,SAAjBA,KAAiB,EAAVC,OAAU,SAAVA,OAAU;AACzEZ,gBAAAA,MADyE,GAChEJ,SAAS,CAACiB,IAAV,CAAeC,MADiD;AAEzEC,gBAAAA,WAFyE,GAE3D9B,eAAe,EAF4C;AAGzE+B,gBAAAA,KAHyE,GAGjE9B,UAAU,CAACI,EAAD,CAHuD;AAIzE2B,gBAAAA,SAJyE,GAI7DlC,GAAG,CAACD,UAAU,CAACQ,EAAD,EAAK,SAAL,CAAX,CAJ0D;AAKzEK,gBAAAA,MALyE,GAKhE;AAAEiB,kBAAAA,OAAO,EAAPA,OAAF;AAAWD,kBAAAA,KAAK,EAALA,KAAX;AAAkBI,kBAAAA,WAAW,EAAXA,WAAlB;AAA+Bf,kBAAAA,MAAM,EAANA,MAA/B;AAAuCH,kBAAAA,EAAE,EAAEoB,SAAS,CAACpB;AAArD,iBALgE;AAMzEqB,gBAAAA,OANyE,GAM/DnC,GAAG,CAACO,EAAD,EAAK,OAAL,EAAcU,MAAd,CAN4D;AAOzEmB,gBAAAA,QAPyE,GAO9DpC,GAAG,CAACO,EAAD,EAAK,QAAL,EAAesB,OAAf,CAP2D;AAQ/EI,gBAAAA,KAAK,CAACI,GAAN,CAAUH,SAAV,EAAqBtB,MAArB;AACAqB,gBAAAA,KAAK,CAACK,MAAN,CAAaH,OAAb,EAAsB;AACpBI,kBAAAA,OAAO,EAAEzC,UAAU,CAACoC,SAAS,CAACpB,EAAX;AADC,iBAAtB;AAGAmB,gBAAAA,KAAK,CAACK,MAAN,CAAaF,QAAb,EAAuB;AACrBG,kBAAAA,OAAO,EAAEzC,UAAU,CAACoC,SAAS,CAACpB,EAAX;AADE,iBAAvB;AAZ+E;AAAA,uBAezEmB,KAAK,CAACR,MAAN,EAfyE;;AAAA;AAAA;AAAA,uBAgBvDxB,MAAM,CAACiC,SAAD,CAhBiD;;AAAA;AAgBzEM,gBAAAA,SAhByE;AAiB/Ef,gBAAAA,MAAM,CAAC,SAAD,EAAY;AAAEgB,kBAAAA,QAAQ,EAAE,SAAZ;AAAuBC,kBAAAA,IAAI,kCAAMF,SAAS,CAACG,IAAV,EAAN;AAAwB7B,oBAAAA,EAAE,EAAE0B,SAAS,CAAC1B;AAAtC;AAA3B,iBAAZ,EAAmF;AAAC8B,kBAAAA,IAAI,EAAE;AAAP,iBAAnF,CAAN;AACAnB,gBAAAA,MAAM,CAAC,0BAAD,EAA6B;AAAEoB,kBAAAA,QAAQ,EAAE5B,MAAZ;AAAoB6B,kBAAAA,OAAO,EAAEZ,SAAS,CAACpB;AAAvC,iBAA7B,EAA0E;AAAC8B,kBAAAA,IAAI,EAAE;AAAP,iBAA1E,CAAN;AACAnB,gBAAAA,MAAM,CAAC,4BAAD,EAA+B;AAAEoB,kBAAAA,QAAQ,EAAEhB,OAAZ;AAAqBiB,kBAAAA,OAAO,EAAEZ,SAAS,CAACpB;AAAxC,iBAA/B,EAA6E;AAAC8B,kBAAAA,IAAI,EAAE;AAAP,iBAA7E,CAAN;AACAlB,gBAAAA,QAAQ,CAAC,kBAAD,EAAqB;AAAEC,kBAAAA,IAAI,EAAJA,IAAF;AAAQoB,kBAAAA,QAAQ,EAAEb,SAAS,CAACpB;AAA5B,iBAArB,EAAuD;AAAC8B,kBAAAA,IAAI,EAAE;AAAP,iBAAvD,CAAR;AApB+E,iDAqBxEvC,QAAQ,CAACQ,SAAS,CAAC0B,OAAV,CAAkB7B,KAAnB,EAA0BwB,SAAS,CAACpB,EAApC,CArBgE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBhF,KAvBM;AAwBDkC,IAAAA,YAxBC,sCAwBgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjDvB,gBAAAA,MAAiD,SAAjDA,MAAiD,EAAzChB,KAAyC,SAAzCA,KAAyC,EAAlCI,SAAkC,SAAlCA,SAAkC;AAAnBe,gBAAAA,KAAmB,SAAnBA,KAAmB,EAAZD,IAAY,SAAZA,IAAY,EAANb,EAAM,SAANA,EAAM;AAC/DF,gBAAAA,MAD+D,GACtDP,QAAQ,CAACI,KAAK,CAACC,KAAP,EAAcI,EAAd,CAD8C;AAE/DmC,gBAAAA,IAF+D,GAExD5C,QAAQ,CAACQ,SAAS,CAACM,KAAV,CAAgBT,KAAjB,EAAwBE,MAAM,CAACO,KAAP,CAAa,CAAb,CAAxB,CAFgD;AAGjEqB,gBAAAA,SAHiE,mCAGhD5B,MAHgD;AAGxCgB,kBAAAA,KAAK,EAALA;AAHwC;AAIjEsB,gBAAAA,OAJiE,mCAIlDD,IAJkD;AAI5CtB,kBAAAA,IAAI,EAAJA;AAJ4C;AAK/DO,gBAAAA,SAL+D,GAKnDlC,GAAG,CAACO,EAAD,EAAK,SAAL,EAAgBO,EAAhB,CALgD;AAM/DqC,gBAAAA,OAN+D,GAMrDnD,GAAG,CAACO,EAAD,EAAK,OAAL,EAAc0C,IAAI,CAACnC,EAAnB,CANkD;AAO/DmB,gBAAAA,KAP+D,GAOvD9B,UAAU,CAACI,EAAD,CAP6C;AAQrE0B,gBAAAA,KAAK,CAACK,MAAN,CAAaJ,SAAb,EAAwBM,SAAxB;AACAP,gBAAAA,KAAK,CAACK,MAAN,CAAaa,OAAb,EAAsBD,OAAtB;AATqE;AAAA,uBAU/DjB,KAAK,CAACR,MAAN,EAV+D;;AAAA;AAAA;AAAA,uBAWnDxB,MAAM,CAACiC,SAAD,CAX6C;;AAAA;AAWrEM,gBAAAA,SAXqE;AAAA;AAAA,uBAYrDvC,MAAM,CAACkD,OAAD,CAZ+C;;AAAA;AAYrED,gBAAAA,OAZqE;AAarEzB,gBAAAA,MAAM,CAAC,SAAD,EAAY;AAAEgB,kBAAAA,QAAQ,EAAE,SAAZ;AAAuBC,kBAAAA,IAAI,EAAEF;AAA7B,iBAAZ,EAAsD;AAACI,kBAAAA,IAAI,EAAE;AAAP,iBAAtD,CAAN;AACAnB,gBAAAA,MAAM,CAAC,SAAD,EAAY;AAAEgB,kBAAAA,QAAQ,EAAE,OAAZ;AAAqBC,kBAAAA,IAAI,EAAEQ;AAA3B,iBAAZ,EAAkD;AAACN,kBAAAA,IAAI,EAAE;AAAP,iBAAlD,CAAN;AAdqE,kDAe9DxC,aAAa,CAACoC,SAAD,CAfiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBtE,KAxCM;AAyCPY,IAAAA,WAAW,EAAE;AAAA,UAAG1B,QAAH,SAAGA,QAAH;AAAA,UAAiBZ,EAAjB,SAAiBA,EAAjB;AAAA,aAA0BY,QAAQ,CAAC,WAAD,EAAc;AAAE2B,QAAAA,KAAK,EAAE,IAAT;AAAeZ,QAAAA,QAAQ,EAAE,SAAzB;AAAoC3B,QAAAA,EAAE,EAAFA;AAApC,OAAd,EAAwD;AAAC8B,QAAAA,IAAI,EAAE;AAAP,OAAxD,CAAlC;AAAA,KAzCN;AA0CPU,IAAAA,YAAY,EAAE;AAAA,UAAG5B,QAAH,SAAGA,QAAH;AAAA,UAAiB6B,GAAjB,SAAiBA,GAAjB;AAAA,aAA2B7B,QAAQ,CAAC,YAAD,EAAe;AAAEe,QAAAA,QAAQ,EAAE,SAAZ;AAAuBc,QAAAA,GAAG,EAAHA,GAAvB;AAA4BF,QAAAA,KAAK,EAAE;AAAnC,OAAf,EAA0D;AAACT,QAAAA,IAAI,EAAE;AAAP,OAA1D,CAAnC;AAAA;AA1CP,GA3BI;AAuEbY,EAAAA,SAAS,EAAE;AACTC,IAAAA,kBAAkB,EAAEnD,+BAA+B,CAAC;AAACoD,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAAD,CAD1C;AAETC,IAAAA,yBAAyB,EAAEtD,+BAA+B,CAAC;AAAEoD,MAAAA,MAAM,EAAE,SAAV;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAAD;AAFjD;AAvEE,CAAf","sourcesContent":["import {arrayUnion, collection, doc, getDoc, serverTimestamp, writeBatch} from \"firebase/firestore\"\r\nimport { docToResource, findById, makeAppendChildToParentMutation } from '@/helpers'\r\n\r\nimport { db } from '../../main'\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    items: [] \r\n  },\r\n  getters: {\r\n    thread: (state, getters, rootState) => {\r\n\r\n      return (id) => {\r\n  \r\n        const thread = findById(state.items, id)\r\n        if (!thread) return {}\r\n        return { \r\n          ...thread,\r\n          get author () {\r\n            return findById(rootState.users.items, thread.userId)\r\n          },\r\n          get repliesCount () {\r\n            return thread.posts.length - 1\r\n          },\r\n          get contributorsCount () {\r\n            return thread.contributors.length\r\n          }\r\n        }  \r\n      }\r\n    }\r\n  },\r\n  actions: {\r\n    async createThread({commit, state, dispatch, rootState}, {text, title, forumId}) {\r\n      const userId = rootState.auth.authId\r\n      const publishedAt = serverTimestamp()\r\n      const batch = writeBatch(db)\r\n      const threadRef = doc(collection(db, \"threads\"))\r\n      const thread = { forumId, title, publishedAt, userId, id: threadRef.id }\r\n      const userRef = doc(db, \"users\", userId)\r\n      const forumRef = doc(db, \"forums\", forumId)\r\n      batch.set(threadRef, thread)\r\n      batch.update(userRef, {\r\n        threads: arrayUnion(threadRef.id)\r\n      })\r\n      batch.update(forumRef, {\r\n        threads: arrayUnion(threadRef.id)\r\n      })\r\n      await batch.commit()\r\n      const newThread = await getDoc(threadRef)\r\n      commit('setItem', { resource: 'threads', item: {...newThread.data(), id: newThread.id}}, {root: true})\r\n      commit('users/appendThreadToUser', { parentId: userId, childId: threadRef.id }, {root: true})\r\n      commit('forums/appendThreadToForum', { parentId: forumId, childId: threadRef.id }, {root: true})\r\n      dispatch('posts/createPost', { text, threadId: threadRef.id }, {root: true})\r\n      return findById(rootState.threads.items, threadRef.id)\r\n    },\r\n    async updateThread ({ commit, state, rootState }, { title, text, id }) {\r\n      const thread = findById(state.items, id)\r\n      const post = findById(rootState.posts.items, thread.posts[0])\r\n      let newThread = { ...thread, title }\r\n      let newPost = { ...post, text }\r\n      const threadRef = doc(db, 'threads', id)\r\n      const postRef = doc(db, 'posts', post.id)\r\n      const batch = writeBatch(db)\r\n      batch.update(threadRef, newThread)\r\n      batch.update(postRef, newPost)\r\n      await batch.commit()\r\n      newThread = await getDoc(threadRef)\r\n      newPost = await getDoc(postRef)\r\n      commit('setItem', { resource: 'threads', item: newThread }, {root: true})\r\n      commit('setItem', { resource: 'posts', item: newPost }, {root: true})\r\n      return docToResource(newThread)\r\n    },\r\n    fetchThread: ({ dispatch }, { id }) => dispatch('fetchItem', { emoji: '📄', resource: 'threads', id }, {root: true}),\r\n    fetchThreads: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'threads', ids, emoji: '📄' }, {root: true}),\r\n  },\r\n  mutations: {\r\n    appendPostToThread: makeAppendChildToParentMutation({parent: 'threads', child: 'posts'}),\r\n    appendContributorToThread: makeAppendChildToParentMutation({ parent: 'threads', child: 'contributors' })\r\n  }\r\n}"]}]}