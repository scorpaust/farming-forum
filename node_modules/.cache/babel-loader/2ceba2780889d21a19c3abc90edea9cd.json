{"remainingRequest":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\dev\\farming-forum\\src\\store\\actions.js","dependencies":[{"path":"C:\\dev\\farming-forum\\src\\store\\actions.js","mtime":1640101785164},{"path":"C:\\dev\\farming-forum\\babel.config.js","mtime":1638558199793},{"path":"C:\\dev\\farming-forum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxkZXZcXGZhcm1pbmctZm9ydW1cXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXGFzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJDOlxcZGV2XFxmYXJtaW5nLWZvcnVtXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxvYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgeyBGaWVsZFZhbHVlLCBhcnJheVVuaW9uLCBjb2xsZWN0aW9uLCBkb2MsIGdldERvYywgZ2V0RG9jcywgaW5jcmVtZW50LCBxdWVyeSwgc2VydmVyVGltZXN0YW1wLCBzZXREb2MsIHVwZGF0ZURvYywgd2hlcmUsIHdyaXRlQmF0Y2ggfSBmcm9tICJmaXJlYmFzZS9maXJlc3RvcmUiOwppbXBvcnQgeyBkb2NUb1Jlc291cmNlLCBmaW5kQnlJZCB9IGZyb20gIkAvaGVscGVycyI7CmltcG9ydCB7IGRiIH0gZnJvbSAnLi4vbWFpbic7CmltcG9ydCBzdGF0ZSBmcm9tICJAL3N0b3JlL3N0YXRlIjsKZXhwb3J0IGRlZmF1bHQgewogIGZldGNoSXRlbTogZnVuY3Rpb24gZmV0Y2hJdGVtKF9yZWYsIF9yZWYyKSB7CiAgICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLAogICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgdmFyIGlkID0gX3JlZjIuaWQsCiAgICAgICAgZW1vamkgPSBfcmVmMi5lbW9qaSwKICAgICAgICByZXNvdXJjZSA9IF9yZWYyLnJlc291cmNlLAogICAgICAgIF9yZWYyJGhhbmRsZVVuc3Vic2NyaSA9IF9yZWYyLmhhbmRsZVVuc3Vic2NyaWJlLAogICAgICAgIGhhbmRsZVVuc3Vic2NyaWJlID0gX3JlZjIkaGFuZGxlVW5zdWJzY3JpID09PSB2b2lkIDAgPyBudWxsIDogX3JlZjIkaGFuZGxlVW5zdWJzY3JpLAogICAgICAgIF9yZWYyJG9uY2UgPSBfcmVmMi5vbmNlLAogICAgICAgIG9uY2UgPSBfcmVmMiRvbmNlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYyJG9uY2UsCiAgICAgICAgX3JlZjIkb25TbmFwc2hvdCA9IF9yZWYyLm9uU25hcHNob3QsCiAgICAgICAgb25TbmFwc2hvdCA9IF9yZWYyJG9uU25hcHNob3QgPT09IHZvaWQgMCA/IG51bGwgOiBfcmVmMiRvblNuYXBzaG90OwogICAgY29uc29sZS5sb2coJ/CflKUnLCBlbW9qaSwgaWQpOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgdmFyIGRvY1JlZiA9IGRvYyhkYiwgIiIuY29uY2F0KHJlc291cmNlLCAiLyIpLmNvbmNhdChpZCkpOwogICAgICB2YXIgdW5zdWJzY3JpYmUgPSBnZXREb2MoZG9jUmVmKS50aGVuKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICBpZiAob25jZSkgcmVzKHVuc3Vic2NyaWJlKTsKCiAgICAgICAgaWYgKGRvYy5leGlzdHMpIHsKICAgICAgICAgIHZhciBpdGVtID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBkb2MuZGF0YSgpKSwge30sIHsKICAgICAgICAgICAgaWQ6IGRvYy5pZAogICAgICAgICAgfSk7CgogICAgICAgICAgdmFyIHByZXZpb3VzSXRlbSA9IGZpbmRCeUlkKHN0YXRlW3Jlc291cmNlXS5pdGVtcywgaWQpOwogICAgICAgICAgcHJldmlvdXNJdGVtID0gcHJldmlvdXNJdGVtID8gX29iamVjdFNwcmVhZCh7fSwgcHJldmlvdXNJdGVtKSA6IG51bGw7CiAgICAgICAgICBjb21taXQoJ3NldEl0ZW0nLCB7CiAgICAgICAgICAgIHJlc291cmNlOiByZXNvdXJjZSwKICAgICAgICAgICAgaXRlbTogaXRlbQogICAgICAgICAgfSk7CgogICAgICAgICAgaWYgKHR5cGVvZiBvblNuYXBzaG90ID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICAgIHZhciBpc0xvY2FsID0gZG9jLm1ldGFkYXRhLmhhc1BlbmRpbmdXcml0ZXM7CiAgICAgICAgICAgIG9uU25hcHNob3QoewogICAgICAgICAgICAgIGl0ZW06IF9vYmplY3RTcHJlYWQoe30sIGl0ZW0pLAogICAgICAgICAgICAgIHByZXZpb3VzSXRlbTogcHJldmlvdXNJdGVtLAogICAgICAgICAgICAgIGlzTG9jYWw6IGlzTG9jYWwKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CgogICAgICAgICAgcmVzKGl0ZW0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXMobnVsbCk7CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIGlmIChoYW5kbGVVbnN1YnNjcmliZSkgewogICAgICAgIGhhbmRsZVVuc3Vic2NyaWJlKHVuc3Vic2NyaWJlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb21taXQoJ2FwcGVuZFVuc3Vic2NyaWJlJywgewogICAgICAgICAgdW5zdWJzY3JpYmU6IHVuc3Vic2NyaWJlCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0pOwogIH0sCiAgZmV0Y2hJdGVtczogZnVuY3Rpb24gZmV0Y2hJdGVtcyhfcmVmMywgX3JlZjQpIHsKICAgIHZhciBkaXNwYXRjaCA9IF9yZWYzLmRpc3BhdGNoOwogICAgdmFyIGlkcyA9IF9yZWY0LmlkcywKICAgICAgICByZXNvdXJjZSA9IF9yZWY0LnJlc291cmNlLAogICAgICAgIGVtb2ppID0gX3JlZjQuZW1vamksCiAgICAgICAgX3JlZjQkb25TbmFwc2hvdCA9IF9yZWY0Lm9uU25hcHNob3QsCiAgICAgICAgb25TbmFwc2hvdCA9IF9yZWY0JG9uU25hcHNob3QgPT09IHZvaWQgMCA/IG51bGwgOiBfcmVmNCRvblNuYXBzaG90OwogICAgcmV0dXJuIFByb21pc2UuYWxsKGlkcy5tYXAoZnVuY3Rpb24gKGlkKSB7CiAgICAgIHJldHVybiBkaXNwYXRjaCgnZmV0Y2hJdGVtJywgewogICAgICAgIGlkOiBpZCwKICAgICAgICByZXNvdXJjZTogcmVzb3VyY2UsCiAgICAgICAgZW1vamk6IGVtb2ppLAogICAgICAgIG9uU25hcHNob3Q6IG9uU25hcHNob3QKICAgICAgfSk7CiAgICB9KSk7CiAgfSwKICB1bnN1YnNjcmliZUFsbFNuYXBzaG90czogZnVuY3Rpb24gdW5zdWJzY3JpYmVBbGxTbmFwc2hvdHMoX3JlZjUpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBzdGF0ZSwgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgc3RhdGUgPSBfcmVmNS5zdGF0ZSwgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgICAgICAgICAgIHN0YXRlLnVuc3Vic2NyaWJlcy5mb3JFYWNoKGZ1bmN0aW9uICh1bnN1YnNjcmliZSkgewogICAgICAgICAgICAgICAgcmV0dXJuICIiLmNvbmNhdCh1bnN1YnNjcmliZSwgIigpIik7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgY29tbWl0KCdjbGVhckFsbFVuc3Vic2NyaWJlcycpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["C:/dev/farming-forum/src/store/actions.js"],"names":["FieldValue","arrayUnion","collection","doc","getDoc","getDocs","increment","query","serverTimestamp","setDoc","updateDoc","where","writeBatch","docToResource","findById","db","state","fetchItem","commit","id","emoji","resource","handleUnsubscribe","once","onSnapshot","console","log","Promise","res","docRef","unsubscribe","then","exists","item","data","previousItem","items","isLocal","metadata","hasPendingWrites","fetchItems","dispatch","ids","all","map","unsubscribeAllSnapshots","unsubscribes","forEach"],"mappings":"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","sourcesContent":["import { FieldValue, arrayUnion, collection, doc, getDoc, getDocs, increment, query, serverTimestamp, setDoc, updateDoc, where, writeBatch } from \"firebase/firestore\"\r\nimport { docToResource, findById } from \"@/helpers\"\r\n\r\nimport { db } from '../main'\r\nimport state from \"@/store/state\"\r\n\r\nexport default { \r\n    \r\n    \r\n    fetchItem ({state, commit}, { id, emoji, resource, handleUnsubscribe = null, once = false, onSnapshot = null}) {\r\n      console.log('ðŸ”¥', emoji, id)\r\n      return new Promise((res) => {\r\n        const docRef = doc(db, `${resource}/${id}`);\r\n        const unsubscribe = getDoc(docRef).then((doc) => {\r\n        if (once) res(unsubscribe)\r\n        if (doc.exists) {\r\n          const item = { ...doc.data(), id: doc.id }\r\n          let previousItem = findById(state[resource].items, id)\r\n          previousItem = previousItem ? { ...previousItem } : null\r\n          commit('setItem', { resource, item })\r\n          if (typeof onSnapshot === 'function') {\r\n            const isLocal = doc.metadata.hasPendingWrites\r\n            onSnapshot({ item: { ...item }, previousItem, isLocal })\r\n          }\r\n          res(item)\r\n        } else {\r\n          res(null)\r\n        }\r\n      })\r\n\r\n        if (handleUnsubscribe) {\r\n          handleUnsubscribe(unsubscribe)\r\n        } else {\r\n          commit('appendUnsubscribe', { unsubscribe })\r\n        }\r\n      })\r\n    },\r\n    fetchItems({ dispatch }, { ids, resource, emoji, onSnapshot = null }) {\r\n      return Promise.all(ids.map(id => dispatch('fetchItem', { id, resource, emoji, onSnapshot })))\r\n      \r\n    },\r\n    async unsubscribeAllSnapshots({state, commit}) {\r\n      state.unsubscribes.forEach((unsubscribe) => `${unsubscribe}()`)\r\n      commit('clearAllUnsubscribes')\r\n    }\r\n}"]}]}