{"remainingRequest":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\farming-forum\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\dev\\farming-forum\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\dev\\farming-forum\\src\\pages\\ThreadEdit.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\dev\\farming-forum\\src\\pages\\ThreadEdit.vue","mtime":1639427687885},{"path":"C:\\dev\\farming-forum\\babel.config.js","mtime":1638558199793},{"path":"C:\\dev\\farming-forum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\dev\\farming-forum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\farming-forum\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxkZXZcXGZhcm1pbmctZm9ydW1cXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXGFzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJDOlxcZGV2XFxmYXJtaW5nLWZvcnVtXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxvYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgVGhyZWFkRWRpdG9yIGZyb20gIkAvY29tcG9uZW50cy9UaHJlYWRFZGl0b3IiOwppbXBvcnQgeyBmaW5kQnlJZCB9IGZyb20gIkAvaGVscGVycyI7CmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IGFzeW5jRGF0YVN0YXR1cyBmcm9tICJAL21peGlucy9hc3luY0RhdGFTdGF0dXMiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgVGhyZWFkRWRpdG9yOiBUaHJlYWRFZGl0b3IKICB9LAogIHByb3BzOiB7CiAgICBpZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBtaXhpbnM6IFthc3luY0RhdGFTdGF0dXNdLAogIGNvbXB1dGVkOiB7CiAgICB0aHJlYWQ6IGZ1bmN0aW9uIHRocmVhZCgpIHsKICAgICAgcmV0dXJuIGZpbmRCeUlkKHRoaXMuJHN0b3JlLnN0YXRlLnRocmVhZHMsIHRoaXMuaWQpOwogICAgfSwKICAgIHRleHQ6IGZ1bmN0aW9uIHRleHQoKSB7CiAgICAgIHZhciBwb3N0ID0gZmluZEJ5SWQodGhpcy4kc3RvcmUuc3RhdGUucG9zdHMsIHRoaXMudGhyZWFkLnBvc3RzWzBdKTsKICAgICAgcmV0dXJuIHBvc3QgPyBwb3N0LnRleHQgOiAiIjsKICAgIH0KICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwQWN0aW9ucyhbInVwZGF0ZVRocmVhZCIsICJmZXRjaFRocmVhZCIsICJmZXRjaFBvc3QiXSkpLCB7fSwgewogICAgc2F2ZTogZnVuY3Rpb24gc2F2ZShfcmVmKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB0aXRsZSwgdGV4dCwgdGhyZWFkOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHRpdGxlID0gX3JlZi50aXRsZSwgdGV4dCA9IF9yZWYudGV4dDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLnVwZGF0ZVRocmVhZCh7CiAgICAgICAgICAgICAgICAgIGlkOiBfdGhpcy5pZCwKICAgICAgICAgICAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgICAgICAgICAgICB0ZXh0OiB0ZXh0CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgdGhyZWFkID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgICBuYW1lOiAiVGhyZWFkU2hvdyIsCiAgICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICAgIGlkOiB0aHJlYWQuaWQKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjYW5jZWw6IGZ1bmN0aW9uIGNhbmNlbCgpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICJUaHJlYWRTaG93IiwKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGlkOiB0aGlzLmlkCiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9KSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciB0aHJlYWQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBfdGhpczIuZmV0Y2hUaHJlYWQoewogICAgICAgICAgICAgICAgaWQ6IF90aGlzMi5pZAogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHRocmVhZCA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLmZldGNoUG9zdCh7CiAgICAgICAgICAgICAgICBpZDogdGhyZWFkLnBvc3RzWzBdCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgX3RoaXMyLmFzeW5jRGF0YVN0YXR1c19mZXRjaGVkKCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["C:\\dev\\farming-forum\\src\\pages\\ThreadEdit.vue"],"names":[],"mappings":";;;AAeC,OAAO,YAAP,MAAyB,2BAAzB;AACA,SAAS,QAAT,QAAyB,WAAzB;AACA,SAAS,UAAT,QAA2B,MAA3B;AACA,OAAO,eAAP,MAA4B,0BAA5B;AAEA,eAAe;AACd,EAAA,UAAU,EAAE;AAAE,IAAA,YAAW,EAAX;AAAF,GADE;AAEd,EAAA,KAAK,EAAE;AACN,IAAA,EAAE,EAAE;AAAE,MAAA,IAAI,EAAE,MAAR;AAAgB,MAAA,QAAQ,EAAE;AAA1B;AADE,GAFO;AAKd,EAAA,MAAM,EAAE,CAAC,eAAD,CALM;AAMd,EAAA,QAAQ,EAAE;AACT,IAAA,MADS,oBACA;AACR,aAAO,QAAQ,CAAC,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAnB,EAA4B,KAAK,EAAjC,CAAf;AACA,KAHQ;AAIT,IAAA,IAJS,kBAIF;AACN,UAAM,IAAG,GAAI,QAAQ,CAAC,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAAnB,EAA0B,KAAK,MAAL,CAAY,KAAZ,CAAkB,CAAlB,CAA1B,CAArB;AACA,aAAO,IAAG,GAAI,IAAI,CAAC,IAAT,GAAgB,EAA1B;AACA;AAPQ,GANI;AAed,EAAA,OAAO,kCACH,UAAU,CAAC,CAAC,cAAD,EAAiB,aAAjB,EAAgC,WAAhC,CAAD,CADP;AAEA,IAAA,IAFA,sBAEsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAf,gBAAA,KAAe,QAAf,KAAe,EAAR,IAAQ,QAAR,IAAQ;AAAA;AAAA,uBACN,KAAI,CAAC,YAAL,CAAkB;AACtC,kBAAA,EAAE,EAAE,KAAI,CAAC,EAD6B;AAEtC,kBAAA,KAAK,EAAL,KAFsC;AAGtC,kBAAA,IAAI,EAAJ;AAHsC,iBAAlB,CADM;;AAAA;AACrB,gBAAA,MADqB;;AAM3B,gBAAA,KAAI,CAAC,OAAL,CAAa,IAAb,CAAkB;AAAE,kBAAA,IAAI,EAAE,YAAR;AAAsB,kBAAA,MAAM,EAAE;AAAE,oBAAA,EAAE,EAAE,MAAM,CAAC;AAAb;AAA9B,iBAAlB;;AAN2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO3B,KATK;AAUN,IAAA,MAVM,oBAUG;AACR,WAAK,OAAL,CAAa,IAAb,CAAkB;AAAE,QAAA,IAAI,EAAE,YAAR;AAAsB,QAAA,MAAM,EAAE;AAAE,UAAA,EAAE,EAAE,KAAK;AAAX;AAA9B,OAAlB;AACA;AAZK,IAfO;AA6BR,EAAA,OA7BQ,qBA6BE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACM,MAAI,CAAC,WAAL,CAAiB;AAAE,gBAAA,EAAE,EAAE,MAAI,CAAC;AAAX,eAAjB,CADN;;AAAA;AACT,cAAA,MADS;AAAA;AAAA,qBAET,MAAI,CAAC,SAAL,CAAe;AAAE,gBAAA,EAAE,EAAE,MAAM,CAAC,KAAP,CAAa,CAAb;AAAN,eAAf,CAFS;;AAAA;AAGf,cAAA,MAAI,CAAC,uBAAL;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIf;AAjCa,CAAf","sourcesContent":["<template>\r\n\t<div v-if=\"asyncDataStatus_ready\" class=\"col-full push-top\">\r\n\t\t<h1>\r\n\t\t\tEditing <i>{{ thread.title }}</i>\r\n\t\t</h1>\r\n\r\n\t\t<ThreadEditor\r\n\t\t\t:title=\"thread.title\"\r\n\t\t\t:text=\"text\"\r\n\t\t\t@save=\"save\"\r\n\t\t\t@cancel=\"cancel\"\r\n\t\t/>\r\n\t</div>\r\n</template>\r\n<script>\r\n\timport ThreadEditor from \"@/components/ThreadEditor\";\r\n\timport { findById } from \"@/helpers\";\r\n\timport { mapActions } from \"vuex\";\r\n\timport asyncDataStatus from \"@/mixins/asyncDataStatus\";\r\n\r\n\texport default {\r\n\t\tcomponents: { ThreadEditor },\r\n\t\tprops: {\r\n\t\t\tid: { type: String, required: true },\r\n\t\t},\r\n\t\tmixins: [asyncDataStatus],\r\n\t\tcomputed: {\r\n\t\t\tthread() {\r\n\t\t\t\treturn findById(this.$store.state.threads, this.id);\r\n\t\t\t},\r\n\t\t\ttext() {\r\n\t\t\t\tconst post = findById(this.$store.state.posts, this.thread.posts[0]);\r\n\t\t\t\treturn post ? post.text : \"\";\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t...mapActions([\"updateThread\", \"fetchThread\", \"fetchPost\"]),\r\n\t\t\tasync save({ title, text }) {\r\n\t\t\t\tconst thread = await this.updateThread({\r\n\t\t\t\t\tid: this.id,\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\ttext,\r\n\t\t\t\t});\r\n\t\t\t\tthis.$router.push({ name: \"ThreadShow\", params: { id: thread.id } });\r\n\t\t\t},\r\n\t\t\tcancel() {\r\n\t\t\t\tthis.$router.push({ name: \"ThreadShow\", params: { id: this.id } });\r\n\t\t\t},\r\n\t\t},\r\n\t\tasync created() {\r\n\t\t\tconst thread = await this.fetchThread({ id: this.id });\r\n\t\t\tawait this.fetchPost({ id: thread.posts[0] });\r\n\t\t\tthis.asyncDataStatus_fetched();\r\n\t\t},\r\n\t};\r\n</script>"],"sourceRoot":""}]}