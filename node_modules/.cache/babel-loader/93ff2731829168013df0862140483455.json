{"remainingRequest":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\dev\\farming-forum\\src\\store\\modules\\auth.js","dependencies":[{"path":"C:\\dev\\farming-forum\\src\\store\\modules\\auth.js","mtime":1640860673205},{"path":"C:\\dev\\farming-forum\\babel.config.js","mtime":1638558199793},{"path":"C:\\dev\\farming-forum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/dev/farming-forum/src/store/modules/auth.js"],"names":["GoogleAuthProvider","createUserWithEmailAndPassword","getAuth","signInWithEmailAndPassword","signInWithPopup","collection","doc","getDoc","getDocs","limit","orderBy","query","startAfter","where","db","namespaced","state","authId","authUserUnsubscribe","authObserverUnsubscribe","getters","authUser","rootState","rootGetters","actions","initAuthentication","dispatch","commit","Promise","res","unsubscribe","onAuthStateChanged","user","registerUserWithEmailAndPassword","avatar","email","name","username","password","auth","result","id","uid","root","context","signInWithGoogle","provider","response","userRef","then","userDoc","exists","displayName","photoURL","signOut","fetchAuthUser","userId","currentUser","emoji","resource","handleUnsubscribe","fetchAuthUsersPosts","lastPost","postsRef","postsQuery","posts","next","forEach","item","unsubscribeAuthUserSnapshot","mutations","setAuthId","setAuthUserUnsubscribe","setAuthObserverUnsubscribe"],"mappings":"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","sourcesContent":["import \"firebase/storage\";\r\n\r\nimport { GoogleAuthProvider, createUserWithEmailAndPassword, getAuth, signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\"\r\nimport { collection, doc, getDoc, getDocs, limit, orderBy, query, startAfter, where } from \"firebase/firestore\"\r\n\r\nimport { db } from \"../../main\"\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    authId: null,\r\n    authUserUnsubscribe: null,\r\n    authObserverUnsubscribe: null\r\n  },\r\n  getters: {\r\n    authUser: (state, getters, rootState, rootGetters) => {\r\n      return rootGetters['users/user'](state.authId)\r\n    },\r\n  },\r\n  actions: {\r\n    initAuthentication({state, dispatch, commit}) {\r\n      if (state.authObserverUnsubscribe) state.authObserverUnsubscribe()\r\n      return new Promise((res) => {\r\n        const unsubscribe = getAuth().onAuthStateChanged(async (user) => {\r\n          dispatch('unsubscribeAuthUserSnapshot')\r\n          if (user) {\r\n            await dispatch('fetchAuthUser')\r\n            res(user)\r\n          } else {\r\n            res(null)\r\n          }\r\n        })\r\n        commit(\"setAuthObserverUnsubscribe\", unsubscribe)\r\n      })\r\n    },\r\n\r\n    async registerUserWithEmailAndPassword({ dispatch }, {avatar = null, email, name, username, password }) {\r\n      const auth = getAuth();\r\n      const result = await createUserWithEmailAndPassword(\r\n        auth,\r\n        email,\r\n        password\r\n      )\r\n      /*if (avatar) {\r\n        const sb = storage.ref().child(`uploads/${result.user.uid}/images/${Date.now()}-${avatar.name}`)\r\n        const snapshot = await sb.put(avatar)\r\n        avatar = await snapshot.ref.getDownloadURL()\r\n      }*/\r\n      await dispatch('users/createUser', { id: result.user.uid, email, name, username, avatar }, {root: true} )\r\n    },\r\n    signInWithEmailAndPassword(context, {email, password}) {\r\n      const auth = getAuth()\r\n      return signInWithEmailAndPassword(auth, email, password)\r\n    },\r\n    async signInWithGoogle({dispatch, commit}) {\r\n      const provider = new GoogleAuthProvider();\r\n      const auth = getAuth();\r\n      const response = await signInWithPopup(auth, provider)\r\n      const user = response.user;\r\n      const userRef = doc(db, 'users', user.uid)\r\n      await getDoc(userRef).then((userDoc) => {\r\n        if (!userDoc.exists)\r\n          return dispatch('users/createUser', {id: user.uid, email: user.email, name: user.displayName, username: user.email, avatar: user.photoURL}, {root: true} )\r\n        else \r\n          commit('setAuthId', user.uid)\r\n      })\r\n    },\r\n    async signOut({commit}) {\r\n      await getAuth().signOut()\r\n      commit('setAuthId', null)\r\n    },\r\n\r\n    fetchAuthUser: async ({ dispatch, state, commit }) => {\r\n      const userId = getAuth().currentUser?.uid\r\n      if (!userId) return\r\n      await dispatch('fetchItem', { emoji:'🙋', resource: 'users', id: userId, handleUnsubscribe: (unsubscribe) => {\r\n        commit('setAuthUserUnsubscribe', unsubscribe)\r\n      }}, {root: true} )\r\n      commit('setAuthId', userId)\r\n    },\r\n    async fetchAuthUsersPosts ({ commit, state }, {lastPost}) {\r\n      const postsRef = await collection(db, \"posts\")\r\n      let postsQuery = await getDocs(query(postsRef, where(\"userId\", \"==\", state.authId), orderBy(\"publishedAt\", \"desc\"), limit(10)))\r\n      const posts = []\r\n      if (lastPost) {\r\n        const next = query(postsQuery.query, startAfter(lastPost))\r\n        const posts = await getDocs(next)\r\n        posts.forEach(item => {\r\n        commit('setItem', { resource: 'posts', item }, {root: true})\r\n        })\r\n      } else {\r\n        const posts = postsQuery\r\n        posts.forEach(item => {\r\n          commit('setItem', { resource: 'posts', item }, {root: true})\r\n          })\r\n      }\r\n    },\r\n    async unsubscribeAuthUserSnapshot ({ state, commit }) {\r\n      if (this.state.authUserUnsubscribe) {       \r\n        this.state.authUserUnsubscribe()\r\n      }\r\n      commit('setAuthUserUnsubscribe', null) \r\n    }\r\n  },\r\n  mutations: {\r\n    setAuthId(state, id) {\r\n      state.authId = id\r\n    },\r\n    setAuthUserUnsubscribe (state, unsubscribe) {\r\n      state.authUserUnsubscribe = unsubscribe\r\n    },\r\n    setAuthObserverUnsubscribe (state, unsubscribe) {\r\n      state.authObserverUnsubscribe = unsubscribe\r\n    },\r\n  }\r\n}"]}]}