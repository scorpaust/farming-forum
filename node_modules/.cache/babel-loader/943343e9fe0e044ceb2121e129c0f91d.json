{"remainingRequest":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\dev\\farming-forum\\src\\store\\actions.js","dependencies":[{"path":"C:\\dev\\farming-forum\\src\\store\\actions.js","mtime":1639868574728},{"path":"C:\\dev\\farming-forum\\babel.config.js","mtime":1638558199793},{"path":"C:\\dev\\farming-forum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxkZXZcXGZhcm1pbmctZm9ydW1cXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXGFzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJDOlxcZGV2XFxmYXJtaW5nLWZvcnVtXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxvYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgeyBGaWVsZFZhbHVlLCBhcnJheVVuaW9uLCBjb2xsZWN0aW9uLCBkb2MsIGdldERvYywgZ2V0RG9jcywgaW5jcmVtZW50LCBxdWVyeSwgc2VydmVyVGltZXN0YW1wLCBzZXREb2MsIHVwZGF0ZURvYywgd2hlcmUsIHdyaXRlQmF0Y2ggfSBmcm9tICJmaXJlYmFzZS9maXJlc3RvcmUiOwppbXBvcnQgeyBkb2NUb1Jlc291cmNlLCBmaW5kQnlJZCB9IGZyb20gIkAvaGVscGVycyI7CmltcG9ydCB7IGRiIH0gZnJvbSAnLi4vbWFpbic7CmltcG9ydCBzdGF0ZSBmcm9tICJAL3N0b3JlL3N0YXRlIjsKZXhwb3J0IGRlZmF1bHQgewogIGZldGNoSXRlbTogZnVuY3Rpb24gZmV0Y2hJdGVtKF9yZWYsIF9yZWYyKSB7CiAgICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLAogICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgdmFyIGlkID0gX3JlZjIuaWQsCiAgICAgICAgZW1vamkgPSBfcmVmMi5lbW9qaSwKICAgICAgICByZXNvdXJjZSA9IF9yZWYyLnJlc291cmNlLAogICAgICAgIF9yZWYyJGhhbmRsZVVuc3Vic2NyaSA9IF9yZWYyLmhhbmRsZVVuc3Vic2NyaWJlLAogICAgICAgIGhhbmRsZVVuc3Vic2NyaWJlID0gX3JlZjIkaGFuZGxlVW5zdWJzY3JpID09PSB2b2lkIDAgPyBudWxsIDogX3JlZjIkaGFuZGxlVW5zdWJzY3JpOwogICAgY29uc29sZS5sb2coJ/CflKUnLCBlbW9qaSwgaWQpOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgdmFyIGRvY1JlZiA9IGRvYyhkYiwgIiIuY29uY2F0KHJlc291cmNlLCAiLyIpLmNvbmNhdChpZCkpOwogICAgICB2YXIgdW5zdWJzY3JpYmUgPSBnZXREb2MoZG9jUmVmKS50aGVuKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICBpZiAoZG9jLmV4aXN0cykgewogICAgICAgICAgdmFyIGl0ZW0gPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGRvYy5kYXRhKCkpLCB7fSwgewogICAgICAgICAgICBpZDogZG9jLmlkCiAgICAgICAgICB9KTsKCiAgICAgICAgICBjb21taXQoInNldEl0ZW0iLCB7CiAgICAgICAgICAgIHJlc291cmNlOiByZXNvdXJjZSwKICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICBpdGVtOiBpdGVtCiAgICAgICAgICB9KTsKICAgICAgICAgIHJlcyhpdGVtKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmVzKG51bGwpOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICBpZiAoaGFuZGxlVW5zdWJzY3JpYmUgIT09IG51bGwpIHsKICAgICAgICBoYW5kbGVVbnN1YnNjcmliZSh1bnN1YnNjcmliZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29tbWl0KCdhcHBlbmRVbnN1YnNjcmliZScsIHsKICAgICAgICAgIHVuc3Vic2NyaWJlOiB1bnN1YnNjcmliZQogICAgICAgIH0pOwogICAgICB9CiAgICB9KTsKICB9LAogIGZldGNoSXRlbXM6IGZ1bmN0aW9uIGZldGNoSXRlbXMoX3JlZjMsIF9yZWY0KSB7CiAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmMy5kaXNwYXRjaDsKICAgIHZhciBpZHMgPSBfcmVmNC5pZHMsCiAgICAgICAgcmVzb3VyY2UgPSBfcmVmNC5yZXNvdXJjZSwKICAgICAgICBlbW9qaSA9IF9yZWY0LmVtb2ppOwogICAgcmV0dXJuIFByb21pc2UuYWxsKGlkcy5tYXAoZnVuY3Rpb24gKGlkKSB7CiAgICAgIHJldHVybiBkaXNwYXRjaCgnZmV0Y2hJdGVtJywgewogICAgICAgIGlkOiBpZCwKICAgICAgICByZXNvdXJjZTogcmVzb3VyY2UsCiAgICAgICAgZW1vamk6IGVtb2ppCiAgICAgIH0pOwogICAgfSkpOwogIH0sCiAgdW5zdWJzY3JpYmVBbGxTbmFwc2hvdHM6IGZ1bmN0aW9uIHVuc3Vic2NyaWJlQWxsU25hcHNob3RzKF9yZWY1KSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgc3RhdGUsIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHN0YXRlID0gX3JlZjUuc3RhdGUsIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICAgICAgICAgICAgICBzdGF0ZS51bnN1YnNjcmliZXMuZm9yRWFjaChmdW5jdGlvbiAodW5zdWJzY3JpYmUpIHsKICAgICAgICAgICAgICAgIHJldHVybiAiIi5jb25jYXQodW5zdWJzY3JpYmUsICIoKSIpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIGNvbW1pdCgnY2xlYXJBbGxVbnN1YnNjcmliZXMnKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["C:/dev/farming-forum/src/store/actions.js"],"names":["FieldValue","arrayUnion","collection","doc","getDoc","getDocs","increment","query","serverTimestamp","setDoc","updateDoc","where","writeBatch","docToResource","findById","db","state","fetchItem","commit","id","emoji","resource","handleUnsubscribe","console","log","Promise","res","docRef","unsubscribe","then","exists","item","data","fetchItems","dispatch","ids","all","map","unsubscribeAllSnapshots","unsubscribes","forEach"],"mappings":"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","sourcesContent":["import { FieldValue, arrayUnion, collection, doc, getDoc, getDocs, increment, query, serverTimestamp, setDoc, updateDoc, where, writeBatch } from \"firebase/firestore\"\r\nimport { docToResource, findById } from \"@/helpers\"\r\n\r\nimport { db } from '../main'\r\nimport state from \"@/store/state\"\r\n\r\nexport default { \r\n    \r\n    \r\n    fetchItem ({state, commit}, { id, emoji, resource, handleUnsubscribe = null}) {\r\n      console.log('ðŸ”¥', emoji, id)\r\n      return new Promise((res) => {\r\n        const docRef = doc(db, `${resource}/${id}`);\r\n        const unsubscribe = getDoc(docRef).then((doc) => {\r\n          if (doc.exists) {\r\n            const item = { ...doc.data(), id: doc.id };\r\n            commit(\"setItem\", { resource, id, item });\r\n            res(item)\r\n          } else {\r\n            res(null)\r\n          }\r\n        })\r\n        if (handleUnsubscribe !== null) {\r\n          handleUnsubscribe(unsubscribe)\r\n        } else {\r\n          commit('appendUnsubscribe', { unsubscribe })\r\n        }\r\n      })\r\n    },\r\n    fetchItems({ dispatch }, { ids, resource, emoji }) {\r\n      return Promise.all(ids.map(id => dispatch('fetchItem', { id, resource, emoji })))\r\n      \r\n    },\r\n    async unsubscribeAllSnapshots({state, commit}) {\r\n      state.unsubscribes.forEach((unsubscribe) => `${unsubscribe}()`)\r\n      commit('clearAllUnsubscribes')\r\n    }\r\n}"]}]}