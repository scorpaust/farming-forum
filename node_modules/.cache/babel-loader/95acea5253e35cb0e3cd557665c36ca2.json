{"remainingRequest":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\dev\\farming-forum\\src\\store\\modules\\posts.js","dependencies":[{"path":"C:\\dev\\farming-forum\\src\\store\\modules\\posts.js","mtime":1639938586193},{"path":"C:\\dev\\farming-forum\\babel.config.js","mtime":1638558199793},{"path":"C:\\dev\\farming-forum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzpcXGRldlxcZmFybWluZy1mb3J1bVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJDOlxcZGV2XFxmYXJtaW5nLWZvcnVtXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxhc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgeyBhcnJheVVuaW9uLCBjb2xsZWN0aW9uLCBkb2MsIGdldERvYywgaW5jcmVtZW50LCBzZXJ2ZXJUaW1lc3RhbXAsIHVwZGF0ZURvYywgd3JpdGVCYXRjaCB9IGZyb20gImZpcmViYXNlL2ZpcmVzdG9yZSI7CmltcG9ydCB7IGRiIH0gZnJvbSAiLi4vLi4vbWFpbiI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBpdGVtczogW10KICB9LAogIGdldHRlcnM6IHt9LAogIGFjdGlvbnM6IHsKICAgIGNyZWF0ZVBvc3Q6IGZ1bmN0aW9uIGNyZWF0ZVBvc3QoX3JlZiwgcG9zdCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIHN0YXRlLCByb290U3RhdGUsIGJhdGNoLCBwb3N0UmVmLCB0aHJlYWRSZWYsIHVzZXJSZWYsIG5ld1Bvc3Q7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQsIHN0YXRlID0gX3JlZi5zdGF0ZSwgcm9vdFN0YXRlID0gX3JlZi5yb290U3RhdGU7CiAgICAgICAgICAgICAgICBwb3N0LnVzZXJJZCA9IHJvb3RTdGF0ZS5hdXRoLmF1dGhJZDsKICAgICAgICAgICAgICAgIHBvc3QucHVibGlzaGVkQXQgPSBzZXJ2ZXJUaW1lc3RhbXAoKTsKICAgICAgICAgICAgICAgIGJhdGNoID0gd3JpdGVCYXRjaChkYik7CiAgICAgICAgICAgICAgICBwb3N0UmVmID0gZG9jKGNvbGxlY3Rpb24oZGIsICJwb3N0cyIpKTsKICAgICAgICAgICAgICAgIHRocmVhZFJlZiA9IGRvYyhkYiwgInRocmVhZHMiLCBwb3N0LnRocmVhZElkKTsKICAgICAgICAgICAgICAgIHVzZXJSZWYgPSBkb2MoZGIsICJ1c2VycyIsIHJvb3RTdGF0ZS5hdXRoLmF1dGhJZCk7CiAgICAgICAgICAgICAgICBiYXRjaC5zZXQocG9zdFJlZiwgcG9zdCk7CiAgICAgICAgICAgICAgICBiYXRjaC51cGRhdGUodGhyZWFkUmVmLCB7CiAgICAgICAgICAgICAgICAgIHBvc3RzOiBhcnJheVVuaW9uKHBvc3RSZWYuaWQpLAogICAgICAgICAgICAgICAgICBjb250cmlidXRvcnM6IGFycmF5VW5pb24ocm9vdFN0YXRlLmF1dGguYXV0aElkKQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBiYXRjaC51cGRhdGUodXNlclJlZiwgewogICAgICAgICAgICAgICAgICBwb3N0c0NvdW50OiBpbmNyZW1lbnQoMSkKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgcmV0dXJuIGJhdGNoLmNvbW1pdCgpOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgcmV0dXJuIGdldERvYyhwb3N0UmVmKTsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgIG5ld1Bvc3QgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRJdGVtJywgewogICAgICAgICAgICAgICAgICByZXNvdXJjZTogJ3Bvc3RzJywKICAgICAgICAgICAgICAgICAgaXRlbTogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBuZXdQb3N0LmRhdGEoKSksIHt9LCB7CiAgICAgICAgICAgICAgICAgICAgaWQ6IG5ld1Bvc3QuaWQKICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ3RocmVhZHMvYXBwZW5kUG9zdFRvVGhyZWFkJywgewogICAgICAgICAgICAgICAgICBjaGlsZElkOiBuZXdQb3N0LmlkLAogICAgICAgICAgICAgICAgICBwYXJlbnRJZDogcG9zdC50aHJlYWRJZAogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbW1pdCgndGhyZWFkcy9hcHBlbmRDb250cmlidXRvclRvVGhyZWFkJywgewogICAgICAgICAgICAgICAgICBjaGlsZElkOiByb290U3RhdGUuYXV0aC5hdXRoSWQsCiAgICAgICAgICAgICAgICAgIHBhcmVudElkOiBwb3N0LnRocmVhZElkCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHVwZGF0ZVBvc3Q6IGZ1bmN0aW9uIHVwZGF0ZVBvc3QoX3JlZjIsIF9yZWYzKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb21taXQsIHN0YXRlLCByb290U3RhdGUsIHRleHQsIGlkLCBwb3N0LCBwb3N0UmVmLCB1cGRhdGVkUG9zdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0LCBzdGF0ZSA9IF9yZWYyLnN0YXRlLCByb290U3RhdGUgPSBfcmVmMi5yb290U3RhdGU7CiAgICAgICAgICAgICAgICB0ZXh0ID0gX3JlZjMudGV4dCwgaWQgPSBfcmVmMy5pZDsKICAgICAgICAgICAgICAgIHBvc3QgPSB7CiAgICAgICAgICAgICAgICAgIHRleHQ6IHRleHQsCiAgICAgICAgICAgICAgICAgIGVkaXRlZDogewogICAgICAgICAgICAgICAgICAgIGF0OiBzZXJ2ZXJUaW1lc3RhbXAoKSwKICAgICAgICAgICAgICAgICAgICBieTogcm9vdFN0YXRlLmF1dGguYXV0aElkLAogICAgICAgICAgICAgICAgICAgIG1vZGVyYXRlZDogZmFsc2UKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIHBvc3RSZWYgPSBkb2MoZGIsICdwb3N0cycsIGlkKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiB1cGRhdGVEb2MocG9zdFJlZiwgcG9zdCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiBnZXREb2MocG9zdFJlZik7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIHVwZGF0ZWRQb3N0ID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldEl0ZW0nLCB7CiAgICAgICAgICAgICAgICAgIHJlc291cmNlOiAncG9zdHMnLAogICAgICAgICAgICAgICAgICBpdGVtOiB1cGRhdGVkUG9zdAogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGZldGNoUG9zdDogZnVuY3Rpb24gZmV0Y2hQb3N0KF9yZWY0LCBfcmVmNSkgewogICAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmNC5kaXNwYXRjaDsKICAgICAgdmFyIGlkID0gX3JlZjUuaWQ7CiAgICAgIHJldHVybiBkaXNwYXRjaCgnZmV0Y2hJdGVtJywgewogICAgICAgIGVtb2ppOiAn8J+SrCcsCiAgICAgICAgcmVzb3VyY2U6ICdwb3N0cycsCiAgICAgICAgaWQ6IGlkCiAgICAgIH0sIHsKICAgICAgICByb290OiB0cnVlCiAgICAgIH0pOwogICAgfSwKICAgIGZldGNoUG9zdHM6IGZ1bmN0aW9uIGZldGNoUG9zdHMoX3JlZjYsIF9yZWY3KSB7CiAgICAgIHZhciBkaXNwYXRjaCA9IF9yZWY2LmRpc3BhdGNoOwogICAgICB2YXIgaWRzID0gX3JlZjcuaWRzOwogICAgICByZXR1cm4gZGlzcGF0Y2goJ2ZldGNoSXRlbXMnLCB7CiAgICAgICAgcmVzb3VyY2U6ICdwb3N0cycsCiAgICAgICAgaWRzOiBpZHMsCiAgICAgICAgZW1vamk6ICfwn5KsJwogICAgICB9LCB7CiAgICAgICAgcm9vdDogdHJ1ZQogICAgICB9KTsKICAgIH0KICB9LAogIG11dGF0aW9uczoge30KfTs="},{"version":3,"sources":["C:/dev/farming-forum/src/store/modules/posts.js"],"names":["arrayUnion","collection","doc","getDoc","increment","serverTimestamp","updateDoc","writeBatch","db","namespaced","state","items","getters","actions","createPost","post","commit","rootState","userId","auth","authId","publishedAt","batch","postRef","threadRef","threadId","userRef","set","update","posts","id","contributors","postsCount","newPost","resource","item","data","root","childId","parentId","updatePost","text","edited","at","by","moderated","updatedPost","fetchPost","dispatch","emoji","fetchPosts","ids","mutations"],"mappings":"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","sourcesContent":["import { arrayUnion, collection, doc, getDoc, increment, serverTimestamp, updateDoc, writeBatch } from \"firebase/firestore\";\r\n\r\nimport { db } from \"../../main\"\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    items: []\r\n  },\r\n  getters: {},\r\n  actions: {\r\n    async createPost({commit, state, rootState}, post) {\r\n      post.userId  = rootState.auth.authId\r\n      post.publishedAt = serverTimestamp()\r\n      const batch = writeBatch(db);\r\n      const postRef = doc(collection(db, \"posts\"))\r\n      const threadRef = doc(db, \"threads\", post.threadId) \r\n      const userRef = doc(db, \"users\", rootState.auth.authId)\r\n      batch.set(postRef, post)\r\n      batch.update(threadRef, {\r\n        posts: arrayUnion(postRef.id),\r\n        contributors: arrayUnion(rootState.auth.authId)\r\n      })\r\n      batch.update(userRef, {\r\n        postsCount: increment(1)\r\n      })\r\n      await batch.commit();\r\n      const newPost = await getDoc(postRef)\r\n      commit('setItem', { resource: 'posts', item: {...newPost.data(), id: newPost.id} }, {root: true})\r\n      commit('threads/appendPostToThread', { childId: newPost.id, parentId: post.threadId }, {root: true})\r\n      commit('threads/appendContributorToThread', { childId: rootState.auth.authId, parentId: post.threadId }, {root: true})\r\n    },\r\n    async updatePost({commit, state, rootState}, { text, id}) {\r\n      const post = { \r\n        text,\r\n        edited: {\r\n          at: serverTimestamp(),\r\n          by: rootState.auth.authId,\r\n          moderated: false\r\n        }\r\n      }\r\n      const postRef = doc(db, 'posts', id)\r\n      await updateDoc(postRef, post)\r\n      const updatedPost = await getDoc(postRef)\r\n      commit('setItem', { resource: 'posts', item: updatedPost }, {root: true})\r\n    },\r\n    fetchPost: ({dispatch}, { id }) => dispatch('fetchItem', { emoji: '💬', resource: 'posts', id }, {root: true}),\r\n    fetchPosts: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'posts', ids, emoji: '💬' }, {root: true}),\r\n  },\r\n  mutations: {}\r\n}"]}]}