{"remainingRequest":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\dev\\farming-forum\\src\\store\\actions.js","dependencies":[{"path":"C:\\dev\\farming-forum\\src\\store\\actions.js","mtime":1639430753905},{"path":"C:\\dev\\farming-forum\\babel.config.js","mtime":1638558199793},{"path":"C:\\dev\\farming-forum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/dev/farming-forum/src/store/actions.js"],"names":["arrayUnion","collection","doc","getDoc","getDocs","increment","serverTimestamp","updateDoc","writeBatch","docToResource","findById","db","state","createPost","post","commit","userId","authId","publishedAt","batch","postRef","threadRef","threadId","userRef","set","update","posts","id","contributors","postsCount","newPost","resource","item","data","childId","parentId","updatePost","text","edited","at","by","moderated","updatedPost","createThread","dispatch","title","forumId","thread","forumRef","threads","newThread","updateThread","updateUser","user","fetchCategory","emoji","fetchForum","fetchThread","fetchPost","fetchUser","fetchAuthUser","fetchAllCategories","Promise","res","categories","then","snapshot","cat","docs","map","fetchCategories","ids","fetchForums","fetchThreads","fetchPosts","fetchUsers","fetchItem","console","log","docRef","docSnap","setTimeout","fetchItems","all","unsubscribeAllSnapshots","unsubscribes","forEach","unsubscribe"],"mappings":"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","sourcesContent":["import { arrayUnion, collection, doc, getDoc, getDocs, increment, serverTimestamp, updateDoc, writeBatch } from \"firebase/firestore\"\r\nimport { docToResource, findById } from \"@/helpers\"\r\n\r\nimport { db } from '../main'\r\nimport state from \"@/store/state\"\r\n\r\nexport default { \r\n    async createPost({commit, state}, post) {\r\n      post.userId  = state.authId\r\n      post.publishedAt = serverTimestamp()\r\n      const batch = writeBatch(db);\r\n      const postRef = doc(collection(db, \"posts\"))\r\n      const threadRef = doc(db, \"threads\", post.threadId) \r\n      const userRef = doc(db, \"users\", state.authId)\r\n      batch.set(postRef, post)\r\n      batch.update(threadRef, {\r\n        posts: arrayUnion(postRef.id),\r\n        contributors: arrayUnion(state.authId)\r\n      })\r\n      batch.update(userRef, {\r\n        postsCount: increment(1)\r\n      })\r\n      await batch.commit();\r\n      const newPost = await getDoc(postRef)\r\n      commit('setItem', { resource: 'posts', item: {...newPost.data(), id: newPost.id} })\r\n      commit('appendPostToThread', { childId: postRef.id, parentId: post.threadId })\r\n      commit('appendContributorToThread', { childId: state.authId, parentId: post.threadId })\r\n    },\r\n    async updatePost({commit, state}, { text, id}) {\r\n      const post = { \r\n        text,\r\n        edited: {\r\n          at: serverTimestamp(),\r\n          by: state.authId,\r\n          moderated: false\r\n        }\r\n      }\r\n      const postRef = doc(db, 'posts', id)\r\n      await updateDoc(postRef, post)\r\n      const updatedPost = await getDoc(postRef)\r\n      commit('setItem', { resource: 'posts', item: updatedPost })\r\n    },\r\n    async createThread({commit, state, dispatch}, {text, title, forumId}) {\r\n      const userId = state.authId\r\n      const publishedAt = serverTimestamp()\r\n      const batch = writeBatch(db)\r\n      const threadRef = doc(collection(db, \"threads\"))\r\n      const thread = { forumId, title, publishedAt, userId, id: threadRef.id }\r\n      const userRef = doc(db, \"users\", userId)\r\n      const forumRef = doc(db, \"forums\", forumId)\r\n      batch.set(threadRef, thread)\r\n      batch.update(userRef, {\r\n        threads: arrayUnion(threadRef.id)\r\n      })\r\n      batch.update(forumRef, {\r\n        threads: arrayUnion(threadRef.id)\r\n      })\r\n      await batch.commit()\r\n      const newThread = await getDoc(threadRef)\r\n      commit('setItem', { resource: 'threads', item: {...newThread.data(), id: newThread.id}})\r\n      commit('appendThreadToUser', { parentId: userId, childId: threadRef.id })\r\n      commit('appendThreadToForum', { parentId: forumId, childId: threadRef.id })\r\n      dispatch('createPost', { text, threadId: threadRef.id })\r\n      return findById(state.threads, threadRef.id)\r\n    },\r\n    async updateThread ({ commit, state }, { title, text, id }) {\r\n      const thread = findById(state.threads, id)\r\n      const post = findById(state.posts, thread.posts[0])\r\n      let newThread = { ...thread, title }\r\n      let newPost = { ...post, text }\r\n      const threadRef = doc(db, 'threads', id)\r\n      const postRef = doc(db, 'posts', post.id)\r\n      const batch = writeBatch(db)\r\n      batch.update(threadRef, newThread)\r\n      batch.update(postRef, newPost)\r\n      await batch.commit()\r\n      newThread = await getDoc(threadRef)\r\n      newPost = await getDoc(postRef)\r\n      commit('setItem', { resource: 'threads', item: newThread })\r\n      commit('setItem', { resource: 'posts', item: newPost })\r\n      return docToResource(newThread)\r\n    },\r\n    updateUser ({ commit }, user) {\r\n      commit('setItem', { resource: 'users', item: user })\r\n    },\r\n    fetchCategory: ({ dispatch }, { id }) => dispatch('fetchItem', { emoji: '🏷', resource: 'categories', id }),\r\n  \r\n    fetchForum: ({ dispatch }, { id }) => dispatch('fetchItem', { emoji: '🏁', resource: 'forums', id }),\r\n    \r\n    fetchThread: ({ dispatch }, { id }) => dispatch('fetchItem', { emoji: '📄', resource: 'threads', id }),\r\n    \r\n    fetchPost: ({dispatch}, { id }) => dispatch('fetchItem', { emoji: '💬', resource: 'posts', id }),\r\n    \r\n    fetchUser: ({ dispatch }, { id }) => dispatch('fetchItem', { emoji: '🙋', resource: 'users', id }),\r\n\r\n    fetchAuthUser: ({ dispatch }) => dispatch('fetchItem', { emoji: '🙋', resource: 'users', id: state.authId }),\r\n\r\n    fetchAllCategories({ commit }) {\r\n      return new Promise((res) => {\r\n        const categories = getDocs(collection(db, \"categories\")).then((snapshot) => {\r\n          const cat = snapshot.docs.map(doc => {\r\n            const item = { id: doc.id, ...doc.data()}\r\n            commit('setItem', { resource: 'categories', item})\r\n            return item\r\n          })\r\n          res(cat)\r\n        })    \r\n            \r\n        })  \r\n    },\r\n    fetchCategories: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'categories', ids, emoji: '🏷' }),\r\n    \r\n    fetchForums: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'forums', ids, emoji: '📬' }),\r\n    \r\n    fetchThreads: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'threads', ids, emoji: '📄' }),\r\n    \r\n    fetchPosts: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'posts', ids, emoji: '💬' }),\r\n    \r\n    fetchUsers: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'users', ids, emoji: '🙋' }),\r\n    \r\n    fetchItem ({state, commit}, { id, emoji, resource}) {\r\n      console.log('🔥', emoji, id)\r\n      return new Promise((res) => {\r\n        const docRef = doc(db, `${resource}/${id}`);\r\n        const docSnap = getDoc(docRef).then((doc) => {\r\n          const item = { ...doc.data(), id: doc.id };\r\n          commit(\"setItem\", { resource, id, item });\r\n          setTimeout(() => {\r\n            res(item),\r\n            500\r\n          })\r\n        })\r\n        commit('appendUnsubscribe', { docSnap })\r\n      })\r\n    },\r\n    fetchItems({ dispatch }, { ids, resource, emoji }) {\r\n      return Promise.all(ids.map(id => dispatch('fetchItem', { id, resource, emoji })))\r\n      \r\n    },\r\n    async unsubscribeAllSnapshots({state, commit}) {\r\n      state.unsubscribes.forEach((unsubscribe) => `${unsubscribe}()`)\r\n      commit('clearAllUnsubscribes')\r\n    }\r\n}"]}]}