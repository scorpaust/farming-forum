{"remainingRequest":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\dev\\farming-forum\\src\\store\\actions.js","dependencies":[{"path":"C:\\dev\\farming-forum\\src\\store\\actions.js","mtime":1639326998131},{"path":"C:\\dev\\farming-forum\\babel.config.js","mtime":1638558199793},{"path":"C:\\dev\\farming-forum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\dev\\farming-forum\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\dev\\farming-forum\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/dev/farming-forum/src/store/actions.js"],"names":["arrayUnion","collection","doc","getDoc","getDocs","increment","serverTimestamp","writeBatch","docToResource","findById","db","state","createPost","post","commit","userId","authId","publishedAt","batch","postRef","threadRef","threadId","userRef","set","update","posts","id","contributors","postsCount","newPost","resource","item","data","childId","parentId","createThread","dispatch","text","title","forumId","thread","forumRef","threads","newThread","updateThread","updateUser","user","fetchCategory","emoji","fetchForum","fetchThread","fetchPost","fetchUser","fetchAuthUser","fetchAllCategories","Promise","res","categories","then","snapshot","cat","docs","map","fetchCategories","ids","fetchForums","fetchThreads","fetchPosts","fetchUsers","fetchItem","console","log","docRef","docSnap","fetchItems","all"],"mappings":"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","sourcesContent":["import { arrayUnion, collection, doc, getDoc, getDocs, increment, serverTimestamp, writeBatch } from \"firebase/firestore\"\r\nimport { docToResource, findById } from \"@/helpers\"\r\n\r\nimport { db } from '../main'\r\nimport state from \"@/store/state\"\r\n\r\nexport default { \r\n    async createPost({commit, state}, post) {\r\n      post.userId  = state.authId\r\n      post.publishedAt = serverTimestamp()\r\n      const batch = writeBatch(db);\r\n      const postRef = doc(collection(db, \"posts\"))\r\n      const threadRef = doc(db, \"threads\", post.threadId) \r\n      const userRef = doc(db, \"users\", state.authId)\r\n      batch.set(postRef, post)\r\n      batch.update(threadRef, {\r\n        posts: arrayUnion(postRef.id),\r\n        contributors: arrayUnion(state.authId)\r\n      })\r\n      batch.update(userRef, {\r\n        postsCount: increment(1)\r\n      })\r\n      await batch.commit();\r\n      const newPost = await getDoc(postRef)\r\n      commit('setItem', { resource: 'posts', item: {...newPost.data(), id: newPost.id} })\r\n      commit('appendPostToThread', { childId: postRef.id, parentId: post.threadId })\r\n      commit('appendContributorToThread', { childId: state.authId, parentId: post.threadId })\r\n    },\r\n    async createThread({commit, state, dispatch}, {text, title, forumId}) {\r\n      const userId = state.authId\r\n      const publishedAt = serverTimestamp()\r\n      const batch = writeBatch(db)\r\n      const threadRef = doc(collection(db, \"threads\"))\r\n      const thread = { forumId, title, publishedAt, userId, id: threadRef.id }\r\n      const userRef = doc(db, \"users\", userId)\r\n      const forumRef = doc(db, \"forums\", forumId)\r\n      batch.set(threadRef, thread)\r\n      batch.update(userRef, {\r\n        threads: arrayUnion(threadRef.id)\r\n      })\r\n      batch.update(forumRef, {\r\n        threads: arrayUnion(threadRef.id)\r\n      })\r\n      await batch.commit()\r\n      const newThread = await getDoc(threadRef)\r\n      commit('setItem', { resource: 'threads', item: {...newThread.data(), id: newThread.id}})\r\n      commit('appendThreadToUser', { parentId: userId, childId: threadRef.id })\r\n      commit('appendThreadToForum', { parentId: forumId, childId: threadRef.id })\r\n      dispatch('createPost', { text, threadId: threadRef.id })\r\n      return findById(state.threads, threadRef.id)\r\n    },\r\n    async updateThread ({ commit, state }, { title, text, id }) {\r\n      const thread = findById(state.threads, id)\r\n      const post = findById(state.posts, thread.posts[0])\r\n      let newThread = { ...thread, title }\r\n      let newPost = { ...post, text }\r\n      const threadRef = doc(db, 'threads', id)\r\n      const postRef = doc(db, 'posts', post.id)\r\n      const batch = writeBatch(db)\r\n      batch.update(threadRef, newThread)\r\n      batch.update(postRef, newPost)\r\n      await batch.commit()\r\n      newThread = await getDoc(threadRef)\r\n      newPost = await getDoc(postRef)\r\n      commit('setItem', { resource: 'threads', item: newThread })\r\n      commit('setItem', { resource: 'posts', item: newPost })\r\n      return docToResource(newThread)\r\n    },\r\n    updateUser ({ commit }, user) {\r\n      commit('setItem', { resource: 'users', item: user })\r\n    },\r\n    fetchCategory: ({ dispatch }, { id }) => dispatch('fetchItem', { emoji: '🏷', resource: 'categories', id }),\r\n  \r\n    fetchForum: ({ dispatch }, { id }) => dispatch('fetchItem', { emoji: '🏁', resource: 'forums', id }),\r\n    \r\n    fetchThread: ({ dispatch }, { id }) => dispatch('fetchItem', { emoji: '📄', resource: 'threads', id }),\r\n    \r\n    fetchPost: ({dispatch}, { id }) => dispatch('fetchItem', { emoji: '💬', resource: 'posts', id }),\r\n    \r\n    fetchUser: ({ dispatch }, { id }) => dispatch('fetchItem', { emoji: '🙋', resource: 'users', id }),\r\n\r\n    fetchAuthUser: ({ dispatch }) => dispatch('fetchItem', { emoji: '🙋', resource: 'users', id: state.authId }),\r\n\r\n    fetchAllCategories({ commit }) {\r\n      return new Promise((res) => {\r\n        const categories = getDocs(collection(db, \"categories\")).then((snapshot) => {\r\n          const cat = snapshot.docs.map(doc => {\r\n            const item = { id: doc.id, ...doc.data()}\r\n            commit('setItem', { resource: 'categories', item})\r\n            return item\r\n          })\r\n          res(cat)\r\n        })    \r\n            \r\n        })  \r\n    },\r\n    fetchCategories: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'categories', ids, emoji: '🏷' }),\r\n    \r\n    fetchForums: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'forums', ids, emoji: '📬' }),\r\n    \r\n    fetchThreads: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'threads', ids, emoji: '📄' }),\r\n    \r\n    fetchPosts: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'posts', ids, emoji: '💬' }),\r\n    \r\n    fetchUsers: ({ dispatch }, { ids }) => dispatch('fetchItems', { resource: 'users', ids, emoji: '🙋' }),\r\n    \r\n    fetchItem ({state, commit}, { id, emoji, resource}) {\r\n      console.log('🔥', emoji, id)\r\n      return new Promise((res) => {\r\n        const docRef = doc(db, `${resource}/${id}`);\r\n        const docSnap = getDoc(docRef).then((doc) => {\r\n          const item = { ...doc.data(), id: doc.id };\r\n          commit(\"setItem\", { resource, id, item });\r\n          res(item)\r\n        })\r\n      })\r\n    },\r\n    fetchItems({ dispatch }, { ids, resource, emoji }) {\r\n      return Promise.all(ids.map(id => dispatch('fetchItem', { id, resource, emoji })))\r\n      \r\n    }\r\n}"]}]}